//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18033.
// 
#pragma warning disable 1591

namespace EnterpriseBugs.FakeWebservice.WebServiceClient.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CountryInformationServiceSoap", Namespace="http://www.ezzylearning.com/services/CountryInformationService.asmx")]
    public partial class CountryInformationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetServiceNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountryByTwoLetterISOCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTwoLetterISOCodeByCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountryByThreeLetterISOCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetThreeLetterISOCodeByCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCapitalByCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAreaInKMByCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPopulationByCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContinentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountriesByContinentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountryByCurrencyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyCodeByCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyNameByCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyByCurrencyCodeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CountryInformationService() {
            this.Url = global::EnterpriseBugs.FakeWebservice.WebServiceClient.Properties.Settings.Default.CountryInformationService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetServiceNameCompletedEventHandler GetServiceNameCompleted;
        
        /// <remarks/>
        public event GetCountriesCompletedEventHandler GetCountriesCompleted;
        
        /// <remarks/>
        public event GetCountryByTwoLetterISOCodeCompletedEventHandler GetCountryByTwoLetterISOCodeCompleted;
        
        /// <remarks/>
        public event GetTwoLetterISOCodeByCountryCompletedEventHandler GetTwoLetterISOCodeByCountryCompleted;
        
        /// <remarks/>
        public event GetCountryByThreeLetterISOCodeCompletedEventHandler GetCountryByThreeLetterISOCodeCompleted;
        
        /// <remarks/>
        public event GetThreeLetterISOCodeByCountryCompletedEventHandler GetThreeLetterISOCodeByCountryCompleted;
        
        /// <remarks/>
        public event GetCapitalByCountryCompletedEventHandler GetCapitalByCountryCompleted;
        
        /// <remarks/>
        public event GetAreaInKMByCountryCompletedEventHandler GetAreaInKMByCountryCompleted;
        
        /// <remarks/>
        public event GetPopulationByCountryCompletedEventHandler GetPopulationByCountryCompleted;
        
        /// <remarks/>
        public event GetContinentsCompletedEventHandler GetContinentsCompleted;
        
        /// <remarks/>
        public event GetCountriesByContinentCompletedEventHandler GetCountriesByContinentCompleted;
        
        /// <remarks/>
        public event GetCountryByCurrencyCodeCompletedEventHandler GetCountryByCurrencyCodeCompleted;
        
        /// <remarks/>
        public event GetCurrenciesCompletedEventHandler GetCurrenciesCompleted;
        
        /// <remarks/>
        public event GetCurrencyCodeByCountryCompletedEventHandler GetCurrencyCodeByCountryCompleted;
        
        /// <remarks/>
        public event GetCurrencyNameByCountryCompletedEventHandler GetCurrencyNameByCountryCompleted;
        
        /// <remarks/>
        public event GetCurrencyByCurrencyCodeCompletedEventHandler GetCurrencyByCurrencyCodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetServiceNam" +
            "e", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServiceName() {
            object[] results = this.Invoke("GetServiceName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceNameAsync() {
            this.GetServiceNameAsync(null);
        }
        
        /// <remarks/>
        public void GetServiceNameAsync(object userState) {
            if ((this.GetServiceNameOperationCompleted == null)) {
                this.GetServiceNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceNameOperationCompleted);
            }
            this.InvokeAsync("GetServiceName", new object[0], this.GetServiceNameOperationCompleted, userState);
        }
        
        private void OnGetServiceNameOperationCompleted(object arg) {
            if ((this.GetServiceNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceNameCompleted(this, new GetServiceNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetCountries", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCountries() {
            object[] results = this.Invoke("GetCountries", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountriesAsync() {
            this.GetCountriesAsync(null);
        }
        
        /// <remarks/>
        public void GetCountriesAsync(object userState) {
            if ((this.GetCountriesOperationCompleted == null)) {
                this.GetCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountriesOperationCompleted);
            }
            this.InvokeAsync("GetCountries", new object[0], this.GetCountriesOperationCompleted, userState);
        }
        
        private void OnGetCountriesOperationCompleted(object arg) {
            if ((this.GetCountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountriesCompleted(this, new GetCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetCountryByT" +
            "woLetterISOCode", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCountryByTwoLetterISOCode(string twoLetterISOCode) {
            object[] results = this.Invoke("GetCountryByTwoLetterISOCode", new object[] {
                        twoLetterISOCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountryByTwoLetterISOCodeAsync(string twoLetterISOCode) {
            this.GetCountryByTwoLetterISOCodeAsync(twoLetterISOCode, null);
        }
        
        /// <remarks/>
        public void GetCountryByTwoLetterISOCodeAsync(string twoLetterISOCode, object userState) {
            if ((this.GetCountryByTwoLetterISOCodeOperationCompleted == null)) {
                this.GetCountryByTwoLetterISOCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountryByTwoLetterISOCodeOperationCompleted);
            }
            this.InvokeAsync("GetCountryByTwoLetterISOCode", new object[] {
                        twoLetterISOCode}, this.GetCountryByTwoLetterISOCodeOperationCompleted, userState);
        }
        
        private void OnGetCountryByTwoLetterISOCodeOperationCompleted(object arg) {
            if ((this.GetCountryByTwoLetterISOCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountryByTwoLetterISOCodeCompleted(this, new GetCountryByTwoLetterISOCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetTwoLetterI" +
            "SOCodeByCountry", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTwoLetterISOCodeByCountry(string countryName) {
            object[] results = this.Invoke("GetTwoLetterISOCodeByCountry", new object[] {
                        countryName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTwoLetterISOCodeByCountryAsync(string countryName) {
            this.GetTwoLetterISOCodeByCountryAsync(countryName, null);
        }
        
        /// <remarks/>
        public void GetTwoLetterISOCodeByCountryAsync(string countryName, object userState) {
            if ((this.GetTwoLetterISOCodeByCountryOperationCompleted == null)) {
                this.GetTwoLetterISOCodeByCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTwoLetterISOCodeByCountryOperationCompleted);
            }
            this.InvokeAsync("GetTwoLetterISOCodeByCountry", new object[] {
                        countryName}, this.GetTwoLetterISOCodeByCountryOperationCompleted, userState);
        }
        
        private void OnGetTwoLetterISOCodeByCountryOperationCompleted(object arg) {
            if ((this.GetTwoLetterISOCodeByCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTwoLetterISOCodeByCountryCompleted(this, new GetTwoLetterISOCodeByCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetCountryByT" +
            "hreeLetterISOCode", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCountryByThreeLetterISOCode(string threeLetterISOCode) {
            object[] results = this.Invoke("GetCountryByThreeLetterISOCode", new object[] {
                        threeLetterISOCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountryByThreeLetterISOCodeAsync(string threeLetterISOCode) {
            this.GetCountryByThreeLetterISOCodeAsync(threeLetterISOCode, null);
        }
        
        /// <remarks/>
        public void GetCountryByThreeLetterISOCodeAsync(string threeLetterISOCode, object userState) {
            if ((this.GetCountryByThreeLetterISOCodeOperationCompleted == null)) {
                this.GetCountryByThreeLetterISOCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountryByThreeLetterISOCodeOperationCompleted);
            }
            this.InvokeAsync("GetCountryByThreeLetterISOCode", new object[] {
                        threeLetterISOCode}, this.GetCountryByThreeLetterISOCodeOperationCompleted, userState);
        }
        
        private void OnGetCountryByThreeLetterISOCodeOperationCompleted(object arg) {
            if ((this.GetCountryByThreeLetterISOCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountryByThreeLetterISOCodeCompleted(this, new GetCountryByThreeLetterISOCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetThreeLette" +
            "rISOCodeByCountry", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetThreeLetterISOCodeByCountry(string countryName) {
            object[] results = this.Invoke("GetThreeLetterISOCodeByCountry", new object[] {
                        countryName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetThreeLetterISOCodeByCountryAsync(string countryName) {
            this.GetThreeLetterISOCodeByCountryAsync(countryName, null);
        }
        
        /// <remarks/>
        public void GetThreeLetterISOCodeByCountryAsync(string countryName, object userState) {
            if ((this.GetThreeLetterISOCodeByCountryOperationCompleted == null)) {
                this.GetThreeLetterISOCodeByCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThreeLetterISOCodeByCountryOperationCompleted);
            }
            this.InvokeAsync("GetThreeLetterISOCodeByCountry", new object[] {
                        countryName}, this.GetThreeLetterISOCodeByCountryOperationCompleted, userState);
        }
        
        private void OnGetThreeLetterISOCodeByCountryOperationCompleted(object arg) {
            if ((this.GetThreeLetterISOCodeByCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThreeLetterISOCodeByCountryCompleted(this, new GetThreeLetterISOCodeByCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetCapitalByC" +
            "ountry", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCapitalByCountry(string countryName) {
            object[] results = this.Invoke("GetCapitalByCountry", new object[] {
                        countryName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCapitalByCountryAsync(string countryName) {
            this.GetCapitalByCountryAsync(countryName, null);
        }
        
        /// <remarks/>
        public void GetCapitalByCountryAsync(string countryName, object userState) {
            if ((this.GetCapitalByCountryOperationCompleted == null)) {
                this.GetCapitalByCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCapitalByCountryOperationCompleted);
            }
            this.InvokeAsync("GetCapitalByCountry", new object[] {
                        countryName}, this.GetCapitalByCountryOperationCompleted, userState);
        }
        
        private void OnGetCapitalByCountryOperationCompleted(object arg) {
            if ((this.GetCapitalByCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCapitalByCountryCompleted(this, new GetCapitalByCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetAreaInKMBy" +
            "Country", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAreaInKMByCountry(string countryName) {
            object[] results = this.Invoke("GetAreaInKMByCountry", new object[] {
                        countryName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAreaInKMByCountryAsync(string countryName) {
            this.GetAreaInKMByCountryAsync(countryName, null);
        }
        
        /// <remarks/>
        public void GetAreaInKMByCountryAsync(string countryName, object userState) {
            if ((this.GetAreaInKMByCountryOperationCompleted == null)) {
                this.GetAreaInKMByCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAreaInKMByCountryOperationCompleted);
            }
            this.InvokeAsync("GetAreaInKMByCountry", new object[] {
                        countryName}, this.GetAreaInKMByCountryOperationCompleted, userState);
        }
        
        private void OnGetAreaInKMByCountryOperationCompleted(object arg) {
            if ((this.GetAreaInKMByCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAreaInKMByCountryCompleted(this, new GetAreaInKMByCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetPopulation" +
            "ByCountry", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPopulationByCountry(string countryName) {
            object[] results = this.Invoke("GetPopulationByCountry", new object[] {
                        countryName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPopulationByCountryAsync(string countryName) {
            this.GetPopulationByCountryAsync(countryName, null);
        }
        
        /// <remarks/>
        public void GetPopulationByCountryAsync(string countryName, object userState) {
            if ((this.GetPopulationByCountryOperationCompleted == null)) {
                this.GetPopulationByCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPopulationByCountryOperationCompleted);
            }
            this.InvokeAsync("GetPopulationByCountry", new object[] {
                        countryName}, this.GetPopulationByCountryOperationCompleted, userState);
        }
        
        private void OnGetPopulationByCountryOperationCompleted(object arg) {
            if ((this.GetPopulationByCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPopulationByCountryCompleted(this, new GetPopulationByCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetContinents" +
            "", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetContinents() {
            object[] results = this.Invoke("GetContinents", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetContinentsAsync() {
            this.GetContinentsAsync(null);
        }
        
        /// <remarks/>
        public void GetContinentsAsync(object userState) {
            if ((this.GetContinentsOperationCompleted == null)) {
                this.GetContinentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContinentsOperationCompleted);
            }
            this.InvokeAsync("GetContinents", new object[0], this.GetContinentsOperationCompleted, userState);
        }
        
        private void OnGetContinentsOperationCompleted(object arg) {
            if ((this.GetContinentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContinentsCompleted(this, new GetContinentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetCountriesB" +
            "yContinent", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCountriesByContinent(string continentCode) {
            object[] results = this.Invoke("GetCountriesByContinent", new object[] {
                        continentCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountriesByContinentAsync(string continentCode) {
            this.GetCountriesByContinentAsync(continentCode, null);
        }
        
        /// <remarks/>
        public void GetCountriesByContinentAsync(string continentCode, object userState) {
            if ((this.GetCountriesByContinentOperationCompleted == null)) {
                this.GetCountriesByContinentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountriesByContinentOperationCompleted);
            }
            this.InvokeAsync("GetCountriesByContinent", new object[] {
                        continentCode}, this.GetCountriesByContinentOperationCompleted, userState);
        }
        
        private void OnGetCountriesByContinentOperationCompleted(object arg) {
            if ((this.GetCountriesByContinentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountriesByContinentCompleted(this, new GetCountriesByContinentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetCountryByC" +
            "urrencyCode", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCountryByCurrencyCode(string currencyCode) {
            object[] results = this.Invoke("GetCountryByCurrencyCode", new object[] {
                        currencyCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountryByCurrencyCodeAsync(string currencyCode) {
            this.GetCountryByCurrencyCodeAsync(currencyCode, null);
        }
        
        /// <remarks/>
        public void GetCountryByCurrencyCodeAsync(string currencyCode, object userState) {
            if ((this.GetCountryByCurrencyCodeOperationCompleted == null)) {
                this.GetCountryByCurrencyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountryByCurrencyCodeOperationCompleted);
            }
            this.InvokeAsync("GetCountryByCurrencyCode", new object[] {
                        currencyCode}, this.GetCountryByCurrencyCodeOperationCompleted, userState);
        }
        
        private void OnGetCountryByCurrencyCodeOperationCompleted(object arg) {
            if ((this.GetCountryByCurrencyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountryByCurrencyCodeCompleted(this, new GetCountryByCurrencyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetCurrencies" +
            "", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCurrencies() {
            object[] results = this.Invoke("GetCurrencies", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrenciesAsync() {
            this.GetCurrenciesAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrenciesAsync(object userState) {
            if ((this.GetCurrenciesOperationCompleted == null)) {
                this.GetCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrenciesOperationCompleted);
            }
            this.InvokeAsync("GetCurrencies", new object[0], this.GetCurrenciesOperationCompleted, userState);
        }
        
        private void OnGetCurrenciesOperationCompleted(object arg) {
            if ((this.GetCurrenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrenciesCompleted(this, new GetCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetCurrencyCo" +
            "deByCountry", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrencyCodeByCountry(string countryName) {
            object[] results = this.Invoke("GetCurrencyCodeByCountry", new object[] {
                        countryName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyCodeByCountryAsync(string countryName) {
            this.GetCurrencyCodeByCountryAsync(countryName, null);
        }
        
        /// <remarks/>
        public void GetCurrencyCodeByCountryAsync(string countryName, object userState) {
            if ((this.GetCurrencyCodeByCountryOperationCompleted == null)) {
                this.GetCurrencyCodeByCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyCodeByCountryOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyCodeByCountry", new object[] {
                        countryName}, this.GetCurrencyCodeByCountryOperationCompleted, userState);
        }
        
        private void OnGetCurrencyCodeByCountryOperationCompleted(object arg) {
            if ((this.GetCurrencyCodeByCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyCodeByCountryCompleted(this, new GetCurrencyCodeByCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetCurrencyNa" +
            "meByCountry", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrencyNameByCountry(string countryName) {
            object[] results = this.Invoke("GetCurrencyNameByCountry", new object[] {
                        countryName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyNameByCountryAsync(string countryName) {
            this.GetCurrencyNameByCountryAsync(countryName, null);
        }
        
        /// <remarks/>
        public void GetCurrencyNameByCountryAsync(string countryName, object userState) {
            if ((this.GetCurrencyNameByCountryOperationCompleted == null)) {
                this.GetCurrencyNameByCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyNameByCountryOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyNameByCountry", new object[] {
                        countryName}, this.GetCurrencyNameByCountryOperationCompleted, userState);
        }
        
        private void OnGetCurrencyNameByCountryOperationCompleted(object arg) {
            if ((this.GetCurrencyNameByCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyNameByCountryCompleted(this, new GetCurrencyNameByCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ezzylearning.com/services/CountryInformationService.asmx/GetCurrencyBy" +
            "CurrencyCode", RequestNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", ResponseNamespace="http://www.ezzylearning.com/services/CountryInformationService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrencyByCurrencyCode(string currencyCode) {
            object[] results = this.Invoke("GetCurrencyByCurrencyCode", new object[] {
                        currencyCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyByCurrencyCodeAsync(string currencyCode) {
            this.GetCurrencyByCurrencyCodeAsync(currencyCode, null);
        }
        
        /// <remarks/>
        public void GetCurrencyByCurrencyCodeAsync(string currencyCode, object userState) {
            if ((this.GetCurrencyByCurrencyCodeOperationCompleted == null)) {
                this.GetCurrencyByCurrencyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyByCurrencyCodeOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyByCurrencyCode", new object[] {
                        currencyCode}, this.GetCurrencyByCurrencyCodeOperationCompleted, userState);
        }
        
        private void OnGetCurrencyByCurrencyCodeOperationCompleted(object arg) {
            if ((this.GetCurrencyByCurrencyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyByCurrencyCodeCompleted(this, new GetCurrencyByCurrencyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetServiceNameCompletedEventHandler(object sender, GetServiceNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCountriesCompletedEventHandler(object sender, GetCountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCountryByTwoLetterISOCodeCompletedEventHandler(object sender, GetCountryByTwoLetterISOCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountryByTwoLetterISOCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountryByTwoLetterISOCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTwoLetterISOCodeByCountryCompletedEventHandler(object sender, GetTwoLetterISOCodeByCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTwoLetterISOCodeByCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTwoLetterISOCodeByCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCountryByThreeLetterISOCodeCompletedEventHandler(object sender, GetCountryByThreeLetterISOCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountryByThreeLetterISOCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountryByThreeLetterISOCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetThreeLetterISOCodeByCountryCompletedEventHandler(object sender, GetThreeLetterISOCodeByCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetThreeLetterISOCodeByCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetThreeLetterISOCodeByCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCapitalByCountryCompletedEventHandler(object sender, GetCapitalByCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCapitalByCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCapitalByCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAreaInKMByCountryCompletedEventHandler(object sender, GetAreaInKMByCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAreaInKMByCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAreaInKMByCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPopulationByCountryCompletedEventHandler(object sender, GetPopulationByCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPopulationByCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPopulationByCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetContinentsCompletedEventHandler(object sender, GetContinentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContinentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContinentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCountriesByContinentCompletedEventHandler(object sender, GetCountriesByContinentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountriesByContinentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountriesByContinentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCountryByCurrencyCodeCompletedEventHandler(object sender, GetCountryByCurrencyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountryByCurrencyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountryByCurrencyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrenciesCompletedEventHandler(object sender, GetCurrenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrencyCodeByCountryCompletedEventHandler(object sender, GetCurrencyCodeByCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyCodeByCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyCodeByCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrencyNameByCountryCompletedEventHandler(object sender, GetCurrencyNameByCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyNameByCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyNameByCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrencyByCurrencyCodeCompletedEventHandler(object sender, GetCurrencyByCurrencyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyByCurrencyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyByCurrencyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591